'use strict'

var createApp = function(canvas) { 
	var c = canvas.getContext("2d")
	c.font = "20px Arial"
	var cards = [1,1,2,2,2,2,3,3,3]
	var strength = [0,0,0,0,0,0]
	var board = [[],[],[],[],[],[]]

	// Create the background
	var handHeight=canvas.height/6
	var boardHeight=canvas.height*2/3
	var boardWidth=canvas.width/2
	var sCardHeight=boardHeight/6
	var sCardWidth=boardWidth/10
	
	var sideHeight=canvas.height*2/3
	var sideWidth=canvas.width/10
	var cardWidth=canvas.width/15
	var cardHeight=handHeight*0.9
	var passX=canvas.width/12
	var passY=canvas.height/2
	var passRadius=passX*0.6
	var crownX=[canvas.width/30,canvas.width/30*3,canvas.width/30,canvas.width/30*3]
	var crownY=[canvas.height/4,canvas.height/4,canvas.height/4*3,canvas.height/4*3]
	var rCrown=canvas.width/30*0.9
	var img = document.getElementById("pic")
	var passAI=0
	var passPlayer=0
	var playCard=0
	var cardSelect=0

	var paint = {
		paintAll: function(){
			this.drawHand()
			this.drawBoard()
			this.drawBoardCard()
			this.drawCount()
			this.drawBorder()
			this.drawCard()
			this.drawPass()
			this.drawCrown()
			this.fillPic()
		},
		drawHand: function(){
			// Draw Hand			
			c.fillStyle="gray"
			c.fillRect(0, 0, canvas.width, handHeight)
			c.fillRect(0, handHeight*5, canvas.width, handHeight)
		},
		drawBoard: function(){
			// Draw Board
			c.fillStyle="#ffd41b"
			c.fillRect(boardWidth/2, handHeight, boardWidth, boardHeight)		
		},
		drawBoardCard: function(){
			for(var i=0;i<board.length;i++){
				for(var j=0;j<board[i].length;j++){
					c.fillStyle="white"
					c.fillRect(boardWidth/2*3-(2+j+0.05)*sCardWidth, (i+0.05)*sCardHeight+handHeight, sCardWidth*0.9, sCardHeight*0.9)
					c.fillStyle="black"
					c.font="20px Arial"
					c.fillText(board[i][j],boardWidth/2*3-(2+j-0.35)*sCardWidth, (i+0.55)*sCardHeight+handHeight)
				}
			}
		},
		drawCount: function(){
			// Draw BoardSideCounter
			c.fillStyle="green"
			c.fillRect(boardWidth/2-sideWidth, handHeight, sideWidth, sideHeight)
			c.fillStyle="black"
			c.font="20px Arial"
			for(var j=0;j<strength.length;j++){	
				c.fillText(strength[j],boardWidth/2-0.2*sideWidth, handHeight+(j+0.55)*sideHeight/6);
			}
			c.fillText("Total:",boardWidth/2-0.9*sideWidth, handHeight+sideHeight/6)
			c.fillText("Total:",boardWidth/2-0.9*sideWidth, handHeight+4*sideHeight/6)
			c.font="40px Arial"
			c.fillText(strength[0]+strength[1]+strength[2],boardWidth/2-0.8*sideWidth, handHeight+(1.65)*sideHeight/6);
			c.fillText(strength[3]+strength[4]+strength[5],boardWidth/2-0.8*sideWidth, handHeight+(4.65)*sideHeight/6);	
		},
		drawBorder: function(){
			// Draw border
			c.fillStyle="black"
			c.fillRect(boardWidth/2, handHeight+boardHeight/6*1, boardWidth, 1)
			c.fillRect(boardWidth/2, handHeight+boardHeight/6*2, boardWidth, 1)
			c.fillRect(boardWidth/2-sideWidth, handHeight+boardHeight/6*3, boardWidth+sideWidth, 1)
			c.fillRect(boardWidth/2, handHeight+boardHeight/6*4, boardWidth, 1)
			c.fillRect(boardWidth/2, handHeight+boardHeight/6*5, boardWidth, 1)
		},
		drawCard: function(){
			// Draw Card		
			for(var i = 0; i < cards.length; i++){
				c.fillStyle="white"
				c.fillRect(canvas.width-(i+1)*cardWidth, handHeight*5.05, cardWidth*0.95, cardHeight)
				c.fillStyle="black"
				c.font="20px Arial"
				c.fillText(cards[i],canvas.width-(i+0.6)*cardWidth,handHeight*5.5)
			}
		},
		drawPass: function(){
			// Draw Pass
			c.fillStyle="blue"
			c.beginPath()
			c.arc(passX*0.9,passY,passRadius,0,2*Math.PI,false)
			c.closePath()
			c.fill()
			c.fillStyle="black"
			c.font="40px Arial"
			if(passAI==1){
				c.fillText("Passed",passX-1.2*passRadius,passY-1.5*passRadius)
			}
			if(passPlayer==1){
				c.fillText("Passed",passX-1.2*passRadius,passY+2*passRadius)
			}			
		},
		drawCrown: function(){
			// Draw Crown
			c.fillStyle="gray"
			for(var k=0;k<4;k++){
				c.beginPath()
				c.arc(crownX[k],crownY[k],rCrown,0,2*Math.PI,false)
				c.closePath()
				c.fill()
			}			
		},
		fillPic: function(){
			c.drawImage(img,3/4*canvas.width, handHeight)
		}

	}

	paint.paintAll()	

	function emphasize(event) {
		var mouseX = event.clientX
		var mouseY = event.clientY
		paint.paintAll()
		function redrawCard(i){
			c.fillStyle="red"
			c.fillRect(canvas.width-(i+1)*cardWidth, handHeight*5.05, cardWidth*0.95, cardHeight)
			c.fillStyle="black"
			c.font="20px Arial"
			c.fillText(cards[i],canvas.width-(i+0.6)*cardWidth,handHeight*5.5)
			playCard=1	
			cardSelect=i
		}

		function detectCard(){
			var index=Math.floor((canvas.width-mouseX)/cardWidth)
			return (index>=cards.length)?-1:index
		}

		function detectPass(){
			return ((mouseX>passX-passRadius)&&(mouseX<passX+passRadius)&&(mouseY>passY-passRadius)&&(mouseY<passY+passRadius))
		}

		function detectBoard(){
			if((mouseX<boardWidth/2)||(mouseX>boardWidth/2*3)||(mouseY<handHeight)||(mouseY>boardHeight+handHeight)){
				return -1
			}else{
				return Math.floor((mouseY-handHeight)/(boardHeight/6))
			}
		}

		if(mouseY>handHeight*5){
			redrawCard(detectCard())
		}else if(detectPass()){
			passPlayer=1
			paint.paintAll()
		}else if(playCard==1){
			var p=detectBoard()
			if(p==-1){
				playCard=0
			}else{
				board[p][board[p].length]=cards[cardSelect]
				cards.splice(cardSelect,1)
				playCard=0
				cardSelect=0
			}
			paint.paintAll()
		}

	}

	canvas.addEventListener("click", emphasize, false)


	// colors of buildings
	//var blgColors = [ 'red', 'blue', 'gray', 'orange'] 

	//build a building
	// var build = function() { 
	// 	var x0 = Math.random()*canvas.width
	// 	var blgWidth = (windowWidth+windowSpacing) * Math.floor(Math.random()*10)
	// 	var blgHeight = Math.random()*(canvas.height/2-55)

	// 	c.fillStyle= blgColors[ Math.floor(Math.random()*blgColors.length)]
	// 	c.fillRect(x0, floor - blgHeight, blgWidth, blgHeight)
	// 	c.fillStyle="yellow"

	// 	const dx = floorSpacing + windowHeight    
	// 	const dy = windowSpacing + windowWidth
	// 	const floors = Math.floor(blgHeight/dx)
	// 	const rows = Math.floor(blgWidth/dy) - 1
	// 	const range = (n, delta, x0) => Array(n).fill(1).map((_, i) => x0 + i * delta)
	// 	range(floors, dx, floor - blgHeight + dx).forEach(y => {
	// 	    range(rows, dy, windowSpacing).forEach(x => {
	// 	    	if(Math.random()>0.4){
	// 	    		c.fillRect(x0 + x, y - windowHeight, windowWidth, windowHeight)
	// 	    	}
	// 	    })
	// 	})
	// }

	// function sun(){
	// 	var x=10
	// 	var y=40
	// 	return function drawSun() {
	// 		c.clearRect(x-12,y-12,25,25)
	// 		if(x==790){
	// 			x=10
	// 		}else{
	// 			x=x+10
	// 		}
	// 		y=45-Math.random()*10
	// 		c.fillStyle="red"
	// 		c.beginPath()
	// 		c.arc(x,y,10,0,2*Math.PI,false)
	// 		c.closePath()
	// 		c.fill()
	// 	}

	// }

	// function car(){
	// 	var x=0
	// 	var y=460
	// 	return function drawcar(){
	// 		var floor = canvas.height/2
	// 		var grad = c.createLinearGradient(0,floor,0,canvas.height)
	// 		grad.addColorStop(0, "green")
	// 		grad.addColorStop(1, "black")
	// 		c.fillStyle=grad
	// 		c.fillRect(0, floor, canvas.width, canvas.height)
	// 		c.fillStyle="red"
	// 		c.fillRect(x, y+20, 60, 10)

	// 		c.fillStyle="yellow"
	// 		c.beginPath()
	// 		c.arc(x+10,y+30,5,0,2*Math.PI,false)
	// 		c.closePath()
	// 		c.fill()
	// 		c.beginPath()
	// 		c.arc(x+50,y+30,5,0,2*Math.PI,false)
	// 		c.closePath()
	// 		c.fill()
	// 		if(x==740){
	// 			x=0
	// 		}else{
	// 			x+=10
	// 		}
			
	// 	}
	// }

	// var sundraw = sun()
	// var cardraw = car()
	// setInterval(sundraw,50)
	// setInterval(cardraw,150)


	
	return {
		build: build
	}
}

window.onload = function() {
	var app = createApp(document.querySelector("canvas"))
	document.getElementById("build").onclick = app.build
}


